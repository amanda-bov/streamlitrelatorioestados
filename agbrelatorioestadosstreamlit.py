# -*- coding: utf-8 -*-
"""AGBrelatorioestadosstreamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-DlcUbasnjCPHqjzeySwhOZfurDml6Vf
"""



"""link para a api:

https://sdic-api-509281825598.us-central1.run.app/docs

estados_brasil = [
    "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Espírito Santo",
    "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais",
    "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro",
    "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima",
    "Santa Catarina", "São Paulo", "Sergipe", "Tocantins", "Distrito Federal"

exportação por uf
importação por uf
participação relativa nas exportações

intensidadetecnologica

isic

maiores exportadores
maiores importadores

ranking maior exportador por pais
 ranking maior importador pais

estado produto (outra api)


oscar (café com dados)
deixar dinamico dividir a requisição em partes
"""

!pip install pandas
!pip install -q -U google-generativeai
!pip install google-generativeai
!pip install requests
!pip install json
!pip install matplotlib
!pip install seaborn

!pip install streamlit
!pip install geopandas

import requests
import json
import pandas as pd
from pandas import json_normalize
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import geopandas as gpd

"""1.ESTADO PAIS"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"

endpoint = "exportacao_estado_pais"

urlcompleta = urlbase + "/" + endpoint
urlcompleta

def parametros(estado,ano_minimo = 0,posicao = 0,pagina = 1,tamanho_pagina = 500):

    parametros = {
      "estado": estado,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

"""exportacao_estado_pais = parametros("Piauí", tamanho_pagina= 1000)"""

estados_brasil = [
    "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Espírito Santo",
    "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais",
    "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro",
    "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima",
    "Santa Catarina", "São Paulo", "Sergipe", "Tocantins", "Distrito Federal"
]

for estado in estados_brasil:
    params = parametros(estado, tamanho_pagina=1000)
    print(f"Parameters for {estado}: {params}")

for estado in estados_brasil:
    params = parametros(estado, tamanho_pagina=1000)
    url = f"{urlbase}/{endpoint}"
    try:
        response = requests.get(url, params=params)
        response.raise_for_status() # Raise HTTPError for bad responses (4xx or 5xx)
        print(f"URL completa para {estado}: {response.url}")
        print(f"Parâmetros para {estado}: {params}")
        # Process the response data here if needed
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data for {estado}: {e}")

r = requests.get(urlcompleta, params=estados_brasil)

for estado in estados_brasil:
    params = parametros(estado, tamanho_pagina=1000)  # Use the parametros function to create the dictionary
    r = requests.get(urlcompleta, params=params)  # Pass params to requests.get

    if r.status_code == 200:
      data = r.json()
    print(f"Data for {estado}: {data}")  # Or any other processing you want to do

contagem = data['count']
contagem

items = data['items']
items

import pandas as pd


df = pd.DataFrame(items)

df

exportacao_estado = pd.DataFrame(items)
print(exportacao_estado)

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "importacao_estado_pais"
urlcompleta = urlbase + "/" + endpoint

urlcompleta

def parametros(estado,ano_minimo = 0,posicao = 0,pagina = 1,tamanho_pagina = 500):

    parametros = {
      "estado": estado,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

importacao_estado_pais = parametros("Ceará", tamanho_pagina= 1000)

r = requests.get(urlcompleta, params= importacao_estado_pais)

"""2. UF ISIC

"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "exportacao_uf_isic_gcloud"
urlcompleta = urlbase + "/" + endpoint

def parametros(estado,ano_minimo = 0,posicao = 0,pagina = 1,tamanho_pagina = 500):

    parametros = {
      "estado": estado,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "importacao_uf_isic_gcloud"
urlcompleta = urlbase + "/" + endpoint

def parametros(estado,ano_minimo = 0,posicao = 0,pagina = 1,tamanho_pagina = 500):

    parametros = {
      "estado": estado,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

"""3.ESTADO NCM
/exportacao_estado_ncm
"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "exportacao_estado_ncm"
urlcompleta = urlbase + "/" + endpoint

def parametros(estado,ano_minimo = 0,posicao = 0,pagina = 1,tamanho_pagina = 500):

    parametros = {
      "estado": estado,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

exportacao_estado_ncm = parametros("ESCREVAONOMEDOPARAMETRO", tamanho_pagina= 1000)

r = requests.get(urlcompleta, params= exportacao_estado_ncm)

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "importacao_estado_ncm"
urlcompleta = urlbase + "/" + endpoint

"""4. Emprego

"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "get_dados_saldo_emprego_estado/{uf}/{grupo_atividade_economica}"
urlcompleta = urlbase + "/" + endpoint

def parametros(uf, grupo_atividade_economica, ano_minimo=0, posicao=0, pagina=1, tamanho_pagina=500):

    parametros = {
      "uf": uf,
      "ano_minimo": ano_minimo,
      "posicao": posicao,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

get_dados_saldo_emprego_estado = parametros("df", "industria de transformacao", pagina = 1,tamanho_pagina = 500)

r = requests.get(urlcompleta, params= get_dados_saldo_emprego_estado)

"""5. pib estadual e pib nacional"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "get_pib_estadual/{uf}"
urlcompleta = urlbase + "/" + endpoint

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "get_pib_nacional"
urlcompleta = urlbase + "/" + endpoint

"""6. estabelecimentos por estado"""

urlbase = "https://sdic-api-509281825598.us-central1.run.app"
endpoint = "/estabelecimentos/{cnae_primeiros_digitos}"
urlcompleta = urlbase + "/" + endpoint

def parametros(uf,grupo_atividade_economica, pagina = 1,tamanho_pagina = 500):

    parametros = {
      "ano_minimo": ano_minimo,
      "pagina" : pagina,
      "tamanho_pagina": tamanho_pagina}
    return parametros

import streamlit as st
import pandas as pd
import requests